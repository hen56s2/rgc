local TeleportService = game:GetService("TeleportService")
local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false
local LastServerID = ""  -- Variable to store the last server ID

function TPReturner()
    local Site;
    if foundAnything == "" then
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
    else
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
    end
    local ID = ""
    if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
        foundAnything = Site.nextPageCursor
    end
    local num = 0;
    for i,v in pairs(Site.data) do
        local Possible = true
        ID = tostring(v.id)
        if tonumber(v.maxPlayers) > tonumber(v.playing) then
            for _,Existing in pairs(AllIDs) do
                if num ~= 0 then
                    if ID == tostring(Existing) then
                        Possible = false
                    end
                else
                    if tonumber(actualHour) ~= tonumber(Existing) then
                        AllIDs = {}
                        table.insert(AllIDs, actualHour)
                    end
                end
                num = num + 1
            end
            if Possible == true and ID ~= LastServerID then  -- Check if not the last server
                table.insert(AllIDs, ID)
                wait()
                pcall(function()
                    game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                end)
                wait(4)
            end
        end
    end
    LastServerID = game.JobId  -- Update last server ID after teleporting
end

local function teleportToModel(modelName, partName)
    local model = game.Workspace:FindFirstChild(modelName)
    if model then
        local part = model:FindFirstChild(partName)
        if part then
            local humanoidRootPart = game.Players.LocalPlayer.Character.HumanoidRootPart
            humanoidRootPart.CFrame = CFrame.new(part.Position)
        else
            warn(partName .. " not found in " .. modelName .. " model.")
        end
    else
        warn(modelName .. " model not found in Workspace.")
    end
end

function Teleport()
    while true do
        pcall(function()
            teleportToModel("Gloopberry", "Gloopberry") -- Teleport to Gloopberry if available
            wait(5) -- Add delay before teleporting to Shockfruit
            teleportToModel("Shockfruit", "Shockfruit") -- Teleport to Shockfruit if available
            wait(5) -- Add delay before teleporting to Cinderberry
            teleportToModel("Cinderberry", "Cinderberry") -- Teleport to Cinderberry if available
            wait(5) -- Add delay before server hop
            TPReturner()
            if foundAnything ~= "" then
                TPReturner()
            end
        end)
        wait(10)  -- Adjust the delay as needed (in seconds)
    end
end

Teleport()
